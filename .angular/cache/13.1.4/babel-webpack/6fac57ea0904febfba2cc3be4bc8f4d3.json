{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { AdRegistrationComponent } from './ad-registration.component';\nimport { AdResultComponent } from './ad-result.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\"; //import { AdResultComponent } from './ad-result.component';\n//import { AdRegistrationComponent } from './ad-registration.component';\n\nexport let AdService = /*#__PURE__*/(() => {\n  class AdService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.URL = '/api/v1/ads';\n    }\n\n    showAds() {\n      return this.http.get(this.URL).pipe(map(responseData => {\n        const ads = [];\n\n        for (const key in responseData) {\n          if (responseData.hasOwnProperty(key)) {\n            ads.push(Object.assign(Object.assign({}, responseData[key]), {\n              id: key\n            })); //  for(let i=0;i=ads.length;i++){\n            //     if(ads[i].component===AdRegistrationComponent){\n            //       return {AdRegistrationComponent,ads};\n            //     }\n            //     else{\n            //       return {AdResultComponent,ads};\n            //     }\n            //}\n          }\n        }\n\n        return ads; //       return [new Ad(AdRegistrationComponent,ads=>{\n        // this.title = ads.title;\n        // this.instruction = ads.instruction;\n        //       }),\n        //              new Ad(AdResultComponent,ads=>{\n        // this.result = ads.result;\n        //              })\n        //             ]\n      }));\n    }\n\n    getComponent(component) {\n      if (component === \"AdRegistrationComponent\") {\n        return AdRegistrationComponent;\n      } else {\n        return AdResultComponent;\n      }\n    }\n\n  }\n\n  AdService.ɵfac = function AdService_Factory(t) {\n    return new (t || AdService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  AdService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AdService,\n    factory: AdService.ɵfac\n  });\n  return AdService;\n})();","map":null,"metadata":{},"sourceType":"module"}